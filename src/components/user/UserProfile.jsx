// THAY ƒê·ªîI: Th√™m useState, toast, v√† API gi·∫£ l·∫≠p
import { useState } from "react";
import { toast, ToastContainer } from "react-toastify";

// API gi·∫£ l·∫≠p ƒë·ªÉ c·∫≠p nh·∫≠t h·ªì s∆°
const updateProfile = async (data) => {
  return new Promise((resolve) => setTimeout(() => resolve(data), 1000));
};

const UserProfile = () => {
  // THAY ƒê·ªîI: Th√™m state cho form v√† ch·∫ø ƒë·ªô ch·ªânh s·ª≠a
  const [isEditing, setIsEditing] = useState(false);
  const [form, setForm] = useState({
    name: "Nguy·ªÖn VƒÉn C",
    email: "nguyenvanc@example.com",
    role: "Sinh vi√™n",
  });

  // THAY ƒê·ªîI: H√†m x·ª≠ l√Ω submit form
  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await updateProfile(form);
      toast.success("C·∫≠p nh·∫≠t h·ªì s∆° th√†nh c√¥ng!");
      setIsEditing(false);
    } catch (error) {
      toast.error("C·∫≠p nh·∫≠t th·∫•t b·∫°i!");
    }
  };

  return (
    <div className="mt-6">
      <h2 className="text-xl font-bold mb-2">üë§ H·ªì s∆° c√° nh√¢n</h2>
      {/* THAY ƒê·ªîI: Hi·ªÉn th·ªã form khi ch·ªânh s·ª≠a, th√¥ng tin tƒ©nh khi kh√¥ng ch·ªânh s·ª≠a */}
      {isEditing ? (
        <form onSubmit={handleSubmit} className="space-y-2">
          <div>
            <label className="block">H·ªç t√™n</label>
            <input
              type="text"
              value={form.name}
              onChange={(e) => setForm({ ...form, name: e.target.value })}
              className="w-full p-2 border rounded"
              required
            />
          </div>
          <div>
            <label className="block">Email</label>
            <input
              type="email"
              value={form.email}
              onChange={(e) => setForm({ ...form, email: e.target.value })}
              className="w-full p-2 border rounded"
              required
            />
          </div>
          <div>
            <label className="block">ƒê·ªëi t∆∞·ª£ng</label>
            <input
              type="text"
              value={form.role}
              onChange={(e) => setForm({ ...form, role: e.target.value })}
              className="w-full p-2 border rounded"
              required
            />
          </div>
          <div className="flex gap-2">
            <button type="submit" className="px-4 py-2 bg-blue-600 text-white rounded">
              L∆∞u
            </button>
            <button
              type="button"
              onClick={() => setIsEditing(false)}
              className="px-4 py-2 bg-gray-600 text-white rounded"
            >
              H·ªßy
            </button>
          </div>
        </form>
      ) : (
        <>
          <p>H·ªç t√™n: {form.name}</p>
          <p>Email: {form.email}</p>
          <p>ƒê·ªëi t∆∞·ª£ng: {form.role}</p>
          {/* THAY ƒê·ªîI: Button k√≠ch ho·∫°t ch·∫ø ƒë·ªô ch·ªânh s·ª≠a */}
          <button
            onClick={() => setIsEditing(true)}
            className="mt-2 text-blue-600 underline"
            aria-label="C·∫≠p nh·∫≠t h·ªì s∆° c√° nh√¢n"
          >
            C·∫≠p nh·∫≠t th√¥ng tin
          </button>
        </>
      )}
      {/* THAY ƒê·ªîI: Th√™m ToastContainer ƒë·ªÉ hi·ªÉn th·ªã th√¥ng b√°o */}
      <ToastContainer position="top-right" autoClose={3000} />
    </div>
  );
};

export default UserProfile;