import React, { useState } from 'react';
import { ArrowLeft, Shield, Star, X, Check, Users, Heart, BookOpen, Clock, MapPin, Calendar } from 'lucide-react';
import { useNavigate } from 'react-router-dom';

import { experts } from './data/experts';
import { services } from './data/services';

import AnimatedBackground from './AnimatedBackground';
import HeroSection from './HeroSection';
import ServicesSection from './ServicesSection';
import WhyChooseUsSection from './WhyChooseUsSection';
import BookingModal from './BookingModal';


// Main Component
const ConsultationPage = () => {
  const [currentStep, setCurrentStep] = useState(1);
  const [showBookingModal, setShowBookingModal] = useState(false);
  const [selectedService, setSelectedService] = useState(null);
  const [selectedExpert, setSelectedExpert] = useState(null);
  const [selectedDate, setSelectedDate] = useState(null);
  const [selectedTimeSlots, setSelectedTimeSlots] = useState([]);
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    message: ''
  });

  const handleBookNow = () => {
    setShowBookingModal(true);
    setCurrentStep(1);
  };

  const handleNextStep = () => {
    if (currentStep < 4) {
      setCurrentStep(currentStep + 1);
    }
  };

  const handlePrevStep = () => {
    if (currentStep > 1) {
      setCurrentStep(currentStep - 1);
    }
  };

  const calculateTotalPrice = () => {
    if (selectedExpert && selectedTimeSlots.length > 0) {
      return selectedTimeSlots.length * selectedExpert.hourlyRate;
    }
    return 0;
  };

  const formatPrice = (price) => {
    return price.toLocaleString('vi-VN') + 'ƒë';
  };

  const handleBookingComplete = () => {
    alert('üéâ ƒê·∫∑t l·ªãch t∆∞ v·∫•n th√†nh c√¥ng! Chuy√™n vi√™n s·∫Ω li√™n h·ªá x√°c nh·∫≠n trong 30 ph√∫t.');
    setShowBookingModal(false);
    setCurrentStep(1);
    // Reset form
    setSelectedService(null);
    setSelectedExpert(null);
    setSelectedDate(null);
    setSelectedTimeSlots([]);
    setFormData({ name: '', email: '', phone: '', message: '' });
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-emerald-600 via-blue-600 to-purple-600 relative overflow-hidden">
      {/* Animated Background */}
      <AnimatedBackground />

      {/* Header */}
      <div className="relative z-10 p-6">
        <button 
          onClick={() => navigate('/')}
          className="flex items-center space-x-2 text-white/80 hover:text-white transition-colors"
        >
          <ArrowLeft size={20} />
          <span>V·ªÅ trang ch·ªß</span>
        </button>
      </div>

      {/* Main Content */}
      <div className="relative z-10 container mx-auto px-6 pb-12">
        {/* Hero Section */}
        <HeroSection onBookNow={handleBookNow} />

        {/* Services Preview */}
        <ServicesSection services={services} />

        {/* Why Choose Us */}
        <WhyChooseUsSection />
      </div>

      {/* Expert Profiles */}
        <div className="max-w-6xl mx-auto mt-20">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-white mb-4">ƒê·ªôi ng≈© chuy√™n gia h√†ng ƒë·∫ßu</h2>
            <p className="text-white/80 text-lg">ƒê∆∞·ª£c ƒë√†o t·∫°o b√†i b·∫£n, kinh nghi·ªám th·ª±c t·∫ø phong ph√∫</p>
          </div>
          
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {experts.slice(0, 6).map((expert, index) => (
              <div key={index} className="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20 hover:bg-white/15 transition-all duration-300 hover:scale-105">
                <div className="flex items-center space-x-4 mb-4">
                  <div className="w-16 h-16 rounded-full bg-gradient-to-r from-emerald-400 to-blue-500 flex items-center justify-center text-white font-bold text-xl">
                    {expert.name.charAt(0)}
                  </div>
                  <div>
                    <h3 className="text-white font-semibold text-lg">{expert.name}</h3>
                    <p className="text-emerald-300 text-sm">{expert.title}</p>
                  </div>
                </div>
                <p className="text-white/80 text-sm mb-4">{expert.description}</p>
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-1">
                    <Star className="text-yellow-400 fill-current" size={16} />
                    <span className="text-white text-sm">{expert.rating}</span>
                  </div>
                  <span className="text-emerald-300 font-semibold">{formatPrice(expert.hourlyRate)}/h</span>
                </div>
              </div>
            ))}
          </div>
        </div>

      {/* Success Stories */}
        <div className="max-w-6xl mx-auto mt-20">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-white mb-4">C√¢u chuy·ªán th√†nh c√¥ng</h2>
            <p className="text-white/80 text-lg">Nh·ªØng ph·∫£n h·ªìi t√≠ch c·ª±c t·ª´ kh√°ch h√†ng ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª•</p>
          </div>
          
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {[
              {
                name: "Anh Minh",
                service: "Ph√≤ng ch·ªëng Ma t√∫y",
                story: "Sau 3 th√°ng t∆∞ v·∫•n, t√¥i ƒë√£ ho√†n to√†n cai ƒë∆∞·ª£c ch·∫•t k√≠ch th√≠ch. Cu·ªôc s·ªëng gia ƒë√¨nh h·∫°nh ph√∫c tr·ªü l·∫°i.",
                rating: 5
              },
              {
                name: "Ch·ªã Lan",
                service: "T∆∞ v·∫•n Cai nghi·ªán",
                story: "ƒê·ªôi ng≈© chuy√™n gia r·∫•t t·∫≠n t√¢m, ph∆∞∆°ng ph√°p khoa h·ªçc. Con trai t√¥i ƒë√£ tr·ªü l·∫°i tr∆∞·ªùng h·ªçc b√¨nh th∆∞·ªùng.",
                rating: 5
              },
              {
                name: "Anh Tu·∫•n",
                service: "T∆∞ v·∫•n Gia ƒë√¨nh",
                story: "V·ª£ ch·ªìng t√¥i ƒë√£ t√¨m l·∫°i ƒë∆∞·ª£c s·ª± hi·ªÉu bi·∫øt. C·∫£m ∆°n c√°c chuy√™n gia ƒë√£ c·ª©u v√£n h√¥n nh√¢n c·ªßa ch√∫ng t√¥i.",
                rating: 5
              },
              {
                name: "Ch·ªã H∆∞∆°ng",
                service: "T∆∞ v·∫•n Gi√°o d·ª•c",
                story: "Con t√¥i t·ª´ nghi·ªán game ƒë√£ tr·ªü th√†nh h·ªçc sinh gi·ªèi. Ph∆∞∆°ng ph√°p gi√°o d·ª•c th·∫≠t hi·ªáu qu·∫£!",
                rating: 5
              },
              {
                name: "Anh Nam",
                service: "Ph√≤ng ch·ªëng Ma t√∫y",
                story: "T√¥i ƒë√£ tho√°t kh·ªèi v√≤ng xo√°y t·ªá n·∫°n x√£ h·ªôi. Gi·ªù ƒë√¢y c√≥ c√¥ng vi·ªác ·ªïn ƒë·ªãnh v√† gia ƒë√¨nh h·∫°nh ph√∫c.",
                rating: 5
              },
              {
                name: "Ch·ªã Mai",
                service: "T∆∞ v·∫•n Gia ƒë√¨nh",
                story: "D·ªãch v·ª• t∆∞ v·∫•n tr·ª±c tuy·∫øn r·∫•t ti·ªán l·ª£i. T√¥i c√≥ th·ªÉ nh·∫≠n ƒë∆∞·ª£c s·ª± h·ªó tr·ª£ ngay t·∫°i nh√†.",
                rating: 5
              }
            ].map((story, index) => (
              <div key={index} className="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20 hover:bg-white/15 transition-all duration-300">
                <div className="flex items-center space-x-1 mb-3">
                  {[...Array(story.rating)].map((_, i) => (
                    <Star key={i} className="text-yellow-400 fill-current" size={16} />
                  ))}
                </div>
                <p className="text-white/90 mb-4 italic">"{story.story}"</p>
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-white font-semibold">{story.name}</p>
                    <p className="text-emerald-300 text-sm">{story.service}</p>
                  </div>
                  <Heart className="text-red-400" size={20} />
                </div>
              </div>
            ))}
          </div>
        </div>

      {/* Statistics */}
        <div className="max-w-6xl mx-auto mt-20">
          <div className="bg-white/10 backdrop-blur-lg rounded-3xl p-8 border border-white/20">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold text-white mb-4">Th√†nh t√≠ch ƒë·∫°t ƒë∆∞·ª£c</h2>
              <p className="text-white/80 text-lg">Nh·ªØng con s·ªë ·∫•n t∆∞·ª£ng trong h√†nh tr√¨nh ph·ª•c v·ª• c·ªông ƒë·ªìng</p>
            </div>
            
            <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
              {[
                { number: "5,000+", label: "Kh√°ch h√†ng ƒë√£ t∆∞ v·∫•n", icon: Users },
                { number: "98%", label: "T·ª∑ l·ªá th√†nh c√¥ng", icon: Check },
                { number: "24/7", label: "H·ªó tr·ª£ li√™n t·ª•c", icon: Clock },
                { number: "50+", label: "Chuy√™n gia kinh nghi·ªám", icon: Star }
              ].map((stat, index) => (
                <div key={index} className="text-center">
                  <div className="w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-emerald-400 to-blue-500 rounded-full flex items-center justify-center">
                    <stat.icon className="text-white" size={24} />
                  </div>
                  <div className="text-3xl font-bold text-white mb-2">{stat.number}</div>
                  <div className="text-white/80">{stat.label}</div>
                </div>
              ))}
            </div>
          </div>
        </div>

      {/* FAQ Section */}
        <div className="max-w-4xl mx-auto mt-20">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-white mb-4">C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h2>
            <p className="text-white/80 text-lg">Nh·ªØng th·∫Øc m·∫Øc ph·ªï bi·∫øn v·ªÅ d·ªãch v·ª• t∆∞ v·∫•n</p>
          </div>
          
          <div className="space-y-4">
            {[
              {
                question: "D·ªãch v·ª• t∆∞ v·∫•n c√≥ hi·ªáu qu·∫£ kh√¥ng?",
                answer: "V·ªõi ƒë·ªôi ng≈© chuy√™n gia ƒë∆∞·ª£c ƒë√†o t·∫°o b√†i b·∫£n v√† ph∆∞∆°ng ph√°p khoa h·ªçc, t·ª∑ l·ªá th√†nh c√¥ng c·ªßa ch√∫ng t√¥i l√™n ƒë·∫øn 98%. M·ªói tr∆∞·ªùng h·ª£p ƒë·ªÅu ƒë∆∞·ª£c t∆∞ v·∫•n c√° nh√¢n h√≥a ph√π h·ª£p."
              },
              {
                question: "Chi ph√≠ t∆∞ v·∫•n nh∆∞ th·∫ø n√†o?",
                answer: "Chi ph√≠ dao ƒë·ªông t·ª´ 80k-200k/gi·ªù t√πy theo chuy√™n gia v√† lo·∫°i h√¨nh t∆∞ v·∫•n. Ch√∫ng t√¥i cam k·∫øt minh b·∫°ch gi√° c·∫£, kh√¥ng ph√°t sinh chi ph√≠ ·∫©n."
              },
              {
                question: "C√≥ t∆∞ v·∫•n tr·ª±c tuy·∫øn kh√¥ng?",
                answer: "C√≥, ch√∫ng t√¥i cung c·∫•p d·ªãch v·ª• t∆∞ v·∫•n tr·ª±c tuy·∫øn 24/7 qua video call, chat, ho·∫∑c ƒëi·ªán tho·∫°i. ƒê·∫∑c bi·ªát ph√π h·ª£p cho nh·ªØng ai kh√≥ s·∫Øp x·∫øp th·ªùi gian."
              },
              {
                question: "Th√¥ng tin c√° nh√¢n c√≥ ƒë∆∞·ª£c b·∫£o m·∫≠t?",
                answer: "Ch√∫ng t√¥i cam k·∫øt b·∫£o m·∫≠t tuy·ªát ƒë·ªëi th√¥ng tin kh√°ch h√†ng. M·ªçi th√¥ng tin t∆∞ v·∫•n ƒë·ªÅu ƒë∆∞·ª£c m√£ h√≥a v√† ch·ªâ chuy√™n gia ph·ª• tr√°ch m·ªõi c√≥ quy·ªÅn truy c·∫≠p."
              },
              {
                question: "Bao l√¢u th√¨ th·∫•y hi·ªáu qu·∫£?",
                answer: "T√πy theo t·ª´ng tr∆∞·ªùng h·ª£p, th√¥ng th∆∞·ªùng sau 2-4 bu·ªïi t∆∞ v·∫•n ƒë·∫ßu ti√™n, kh√°ch h√†ng ƒë√£ th·∫•y s·ª± thay ƒë·ªïi t√≠ch c·ª±c. Qu√° tr√¨nh ho√†n to√†n ph·ª•c h·ªìi th∆∞·ªùng m·∫•t 3-6 th√°ng."
              }
            ].map((faq, index) => (
              <div key={index} className="bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20">
                <h3 className="text-white font-semibold text-lg mb-3">{faq.question}</h3>
                <p className="text-white/80">{faq.answer}</p>
              </div>
            ))}
          </div>
        </div>

      {/* Contact Section */}
        <div className="max-w-4xl mx-auto mt-20">
          <div className="bg-gradient-to-r from-emerald-500/20 to-blue-500/20 backdrop-blur-lg rounded-3xl p-8 border border-white/20">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold text-white mb-4">Li√™n h·ªá ngay h√¥m nay</h2>
              <p className="text-white/80 text-lg">ƒê·ª´ng ƒë·ªÉ v·∫•n ƒë·ªÅ k√©o d√†i, h√£y b·∫Øt ƒë·∫ßu h√†nh tr√¨nh thay ƒë·ªïi t√≠ch c·ª±c</p>
            </div>
            
            <div className="grid md:grid-cols-3 gap-6 mb-8">
              <div className="text-center">
                <div className="w-16 h-16 mx-auto mb-4 bg-emerald-500 rounded-full flex items-center justify-center">
                  <MapPin className="text-white" size={24} />
                </div>
                <h3 className="text-white font-semibold mb-2">ƒê·ªãa ch·ªâ</h3>
                <p className="text-white/80">123 Nguy·ªÖn VƒÉn C·ª´, Q.1, TP.HCM</p>
              </div>
              
              <div className="text-center">
                <div className="w-16 h-16 mx-auto mb-4 bg-blue-500 rounded-full flex items-center justify-center">
                  <Clock className="text-white" size={24} />
                </div>
                <h3 className="text-white font-semibold mb-2">Gi·ªù l√†m vi·ªác</h3>
                <p className="text-white/80">7h - 19h (Th·ª© 2 - Ch·ªß nh·∫≠t)</p>
              </div>
              
              <div className="text-center">
                <div className="w-16 h-16 mx-auto mb-4 bg-purple-500 rounded-full flex items-center justify-center">
                  <Calendar className="text-white" size={24} />
                </div>
                <h3 className="text-white font-semibold mb-2">ƒê·∫∑t l·ªãch</h3>
                <p className="text-white/80">T∆∞ v·∫•n tr·ª±c tuy·∫øn 24/7</p>
              </div>
            </div>
            
            <div className="text-center">
              <button 
                onClick={handleBookNow}
                className="bg-gradient-to-r from-emerald-500 to-blue-500 text-white px-8 py-4 rounded-2xl font-semibold text-lg hover:from-emerald-600 hover:to-blue-600 transition-all duration-300 transform hover:scale-105 shadow-xl"
              >
                ƒê·∫∑t l·ªãch t∆∞ v·∫•n ngay
              </button>
            </div>
          </div>
        </div>          

      {/* Booking Modal */}
      {showBookingModal && (
        <BookingModal
          currentStep={currentStep}
          onClose={() => setShowBookingModal(false)}
          services={services}
          experts={experts}
          selectedService={selectedService}
          selectedExpert={selectedExpert}
          selectedDate={selectedDate}
          selectedTimeSlots={selectedTimeSlots}
          setSelectedService={setSelectedService}
          setSelectedExpert={setSelectedExpert}
          setSelectedDate={setSelectedDate}
          setSelectedTimeSlots={setSelectedTimeSlots}
          formData={formData}
          setFormData={setFormData}
          handleNextStep={handleNextStep}
          handlePrevStep={handlePrevStep}
          calculateTotalPrice={calculateTotalPrice}
          formatPrice={formatPrice}
          handleBookingComplete={handleBookingComplete}
        />
      )}
    </div>
  );
};

export default ConsultationPage;